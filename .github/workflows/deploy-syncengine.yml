name: Deploy Azure Function App

on:
  workflow_dispatch:
    inputs:
      environment:
        description: Target environment
        required: true
        type: choice
        options:
          - Development
          - Testing
          - Acceptance
          - Production

permissions:
      id-token: write
      contents: read

env:
  PATH_REPO: ./
  FOLDER_FUNCTION: CoSP.AzFunctions

jobs:
  deploy-to-target-environment:
    name: Deploy to ${{ github.event.inputs.environment }} environment
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          path: ${{ env.PATH_REPO }}
          lfs: false

      - name: Load Environment Configuration
        id: config
        run: |
          ENV_LOWER=$(echo "${{ github.event.inputs.environment }}" | tr '[:upper:]' '[:lower:]')
          CONFIG_FILE="${{ env.PATH_REPO }}/.github/config/${ENV_LOWER}.yml"
          
          echo "Loading configuration from: $CONFIG_FILE"
          
          if [ -f "$CONFIG_FILE" ]; then
            echo "‚úÖ Config file found"
            
            # Install yq for YAML parsing
            sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
            sudo chmod +x /usr/local/bin/yq
            
            # Extract configuration values
            FUNCTION_APP_NAME=$(yq e '.azure.function_app_name' "$CONFIG_FILE")
            RESOURCE_GROUP=$(yq e '.azure.function_app_resource_group' "$CONFIG_FILE")
            TARGET_ENV_SHORT=$(yq e '.environment.short_name' "$CONFIG_FILE")
            ENABLE_HEALTH_CHECK=$(yq e '.deployment.function_deployment.enable_health_check' "$CONFIG_FILE")
            HEALTH_CHECK_PATH=$(yq e '.deployment.function_deployment.health_check_path' "$CONFIG_FILE")
            TIMEOUT_MINUTES=$(yq e '.deployment.function_deployment.timeout_minutes' "$CONFIG_FILE")
            
            echo "FUNCTION_APP_NAME=$FUNCTION_APP_NAME" >> $GITHUB_ENV
            echo "RESOURCE_GROUP=$RESOURCE_GROUP" >> $GITHUB_ENV
            echo "TARGET_ENV_SHORT=$TARGET_ENV_SHORT" >> $GITHUB_ENV
            echo "ENABLE_HEALTH_CHECK=$ENABLE_HEALTH_CHECK" >> $GITHUB_ENV
            echo "HEALTH_CHECK_PATH=$HEALTH_CHECK_PATH" >> $GITHUB_ENV
            echo "TIMEOUT_MINUTES=$TIMEOUT_MINUTES" >> $GITHUB_ENV
            
            echo "‚úÖ Configuration loaded successfully"
            echo "  - Function App: $FUNCTION_APP_NAME"
            echo "  - Resource Group: $RESOURCE_GROUP"
            echo "  - Environment: $TARGET_ENV_SHORT"
          else
            echo "‚ùå Config file not found, using fallback configuration"
            # Fallback to original logic
            case "${{ github.event.inputs.environment }}" in
              Development) echo "TARGET_ENV_SHORT=dev" >> $GITHUB_ENV;;
              Testing)     echo "TARGET_ENV_SHORT=tst" >> $GITHUB_ENV;;
              Acceptance)  echo "TARGET_ENV_SHORT=acc" >> $GITHUB_ENV;;
              Production)  echo "TARGET_ENV_SHORT=prd" >> $GITHUB_ENV;;
              *)           echo "Unknown environment"; exit 1;;
            esac
            echo "FUNCTION_APP_NAME=fatestpoc-$TARGET_ENV_SHORT" >> $GITHUB_ENV
          fi

      - name: Verify .NET SDK
        run: |
          command -v dotnet >/dev/null 2>&1 || { echo ".NET SDK not found; install on runner"; exit 1; }
          dotnet --version

      - name: Install Azure Functions Core Tools
        run: |
          npm install -g azure-functions-core-tools@4 --unsafe-perm true
      
      - name: Verify Core Tools
        run: |
          command -v func >/dev/null 2>&1 || { echo "Azure Functions Core Tools not found; install on runner"; exit 1; }
          func --version

      - name: Az Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true

      - name: Configure Function App Settings
        run: |
          echo "Configuring Function App Settings for ${{ env.FUNCTION_APP_NAME }}"
          
          # Set basic function app settings
          az functionapp config appsettings set \
            --name "${{ env.FUNCTION_APP_NAME }}" \
            --resource-group "${{ env.RESOURCE_GROUP }}" \
            --settings \
              FUNCTIONS_WORKER_RUNTIME="powershell" \
              FUNCTIONS_EXTENSION_VERSION="~4" \
              WEBSITE_RUN_FROM_PACKAGE="1" \
              ASPNETCORE_ENVIRONMENT="${{ github.event.inputs.environment }}"
      
      - name: Publish to Azure
        working-directory: ${{ env.PATH_REPO }}/${{ env.FOLDER_FUNCTION }}
        run: |
          echo "Publishing Function App: ${{ env.FUNCTION_APP_NAME }}"
          func azure functionapp publish "${{ env.FUNCTION_APP_NAME }}" --powershell
        env:
          AzureWebJobsScriptRoot: "."

      - name: Confirm deployment
        run: |
          echo "üéâ Successfully deployed Function App: ${{ env.FUNCTION_APP_NAME }}"
          echo "üåê Function App URL: https://${{ env.FUNCTION_APP_NAME }}.azurewebsites.net"
          echo "üè∑Ô∏è Environment: ${{ github.event.inputs.environment }}"
          echo "üìÅ Resource Group: ${{ env.RESOURCE_GROUP }}"

      - name: logout
        run: |
          az logout